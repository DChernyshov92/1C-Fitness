&НаКлиенте
Процедура ЗагрузитьДанныеЧерезТабличныйДокумент(Команда)
    СкопироватьФайлНаСервер("ТабличныйДокумент");
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСервер(СпособЗагрузки)
	ОповещениеОЗавершении = Новый ОписаниеОповещения("СкопироватьФайлНаСерверЗавершение", ЭтотОбъект, СпособЗагрузки);
	НачатьПомещениеФайлаНаСервер(ОповещениеОЗавершении,,,,,УникальныйИдентификатор);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьФайлНаСерверЗавершение(ОписаниеПомещенногоФайла, ДополнительныеПараметры) Экспорт
	Если ОписаниеПомещенногоФайла <> Неопределено Тогда
	    АдресФайлаВХранилище = ОписаниеПомещенногоФайла.Адрес; 
	    ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗагрузитьИзТабличногоДокументаНаСервере(АдресФайлаВХранилище, ДатаПрайсЛиста, Поставщик, ДополнительныеПараметры)    
    ТабДок = ПрочитатьФайл(АдресФайлаВХранилище);
	Если ДополнительныеПараметры = "ТабличныйДокумент" Тогда
        ТаблицаПрайсЛиста = ЗаполнитьТаблицуЗначенийИзТабличногоДокумента(ТабДок);
    Конецесли;    
    Если ТаблицаПрайсЛиста.Количество() Тогда    
        ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик);
    Иначе
        СообщениеПользователю = Новый СообщениеПользователю();
        СообщениеПользователю.Текст = "Выбранный файл не содержит строк с ценами!";
        СообщениеПользователю.Сообщить();            
    КонецЕсли;    
КонецПроцедуры

&НаСервереБезКонтекста                            
Функция ПрочитатьФайл(АдресФайлаВХранилище)
    ТабДок = Новый ТабличныйДокумент;
    ИмяВременногоФайла = ПолучитьИмяВременногоФайла(".xlsx");    
    ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресФайлаВХранилище);
    ДвоичныеДанные.Записать(ИмяВременногоФайла);
    Попытка
        ТабДок.Прочитать(ИмяВременногоФайла);
    Исключение  
        ВызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
    КонецПопытки; 
    Возврат ТабДок;
КонецФункции

&НаСервереБезКонтекста
Функция ЗаполнитьТаблицуЗначенийИзТабличногоДокумента(ТабДок)
	ТаблицаПрайсЛиста = Новый ТаблицаЗначений;
	ТаблицаПрайсЛиста.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ТаблицаПрайсЛиста.Колонки.Добавить("Цена", Новый ОписаниеТипов("Число"));
	КоличествоСтрок = табДок.ВысотаТаблицы;
	Для сч = 2 По КоличествоСтрок Цикл
		Попытка
			НаименованиеНоменклатуры = Строка(ТабДок.ПолучитьОбласть("R" + Формат(сч, "ЧГ=0;") + "C2").ТекущаяОбласть.Текст); 
			НоменклатураСсылка = Справочники.Номенклатура.НайтиПоНаименованию(НаименованиеНоменклатуры);
			Если НоменклатураСсылка.Пустая() Тогда
				Продолжить
			КонецЕсли;
			СтрокаПрайса = ТаблицаПрайсЛиста.Добавить();
			СтрокаПрайса.Номенклатура = НоменклатураСсылка; 
	        СтрокаПрайса.Цена = Число(ТабДок.ПолучитьОбласть("R" + Формат(сч, "ЧГ=0") + "C4").ТекущаяОбласть.Текст);
	    Исключение
	        ВызватьИсключение "Не удалось прочитать файл EXCEL в табличный документ!";
	    КонецПопытки;
	КонецЦикла;
	Возврат ТаблицаПрайсЛиста;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗагрузитьПрайсЛистПоставщика(ТаблицаПрайсЛиста, ДатаПрайсЛиста, Поставщик)
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	ТаблицаПрайсЛиста.Номенклатура КАК Номенклатура,
	|	ТаблицаПрайсЛиста.Цена КАК Цена
	|ПОМЕСТИТЬ ВТ_ТаблицаПрайсЛиста
	|ИЗ
	|	&ТаблицаПрайсЛиста КАК ТаблицаПрайсЛиста
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаПрайсЛиста.Номенклатура КАК Номенклатура,
	|	ВТ_ТаблицаПрайсЛиста.Цена КАК Цена
	|ИЗ
	|	ВТ_ТаблицаПрайсЛиста КАК ВТ_ТаблицаПрайсЛиста
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&Период, ) КАК ЦеныНоменклатурыСрезПоследних
	|		ПО ВТ_ТаблицаПрайсЛиста.Номенклатура = ЦеныНоменклатурыСрезПоследних.Номенклатура";
	Запрос.УстановитьПараметр("ТаблицаПрайсЛиста", ТаблицаПрайсЛиста);
	Запрос.УстановитьПараметр("Период", ДатаПрайсЛиста);
	
	Рез = Запрос.Выполнить();
	Если Рез.Пустой() Тогда
		СообщениеПользователю = Новый СообщениеПользователю();
	    СообщениеПользователю.Текст = "Номенклатура, содеражащаяся в файле, не найдена!";
	    СообщениеПользователю.Сообщить();
		Возврат;
	КонецЕсли;
	
	Выборка = Рез.Выбрать();
    КоличествоСтрокЗагружено = 0;
	КоличествоСтрокОшибка = 0;
	Пока Выборка.Следующий() Цикл
		МенеджерЦенНоменклатуры	= РегистрыСведений.ЦеныНоменклатуры;
		МенеджерЗаписи = МенеджерЦенНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Период = ДатаПрайсЛиста;
		МенеджерЗаписи.Номенклатура = Выборка.Номенклатура;
		МенеджерЗаписи.ВидЦены = Перечисления.ВидыЦенПродажи.Розничная;
		МенеджерЗаписи.Цена = Выборка.Цена;
		Попытка
			МенеджерЗаписи.Записать();
			КоличествоСтрокЗагружено = КоличествоСтрокЗагружено + 1;
		Исключение
			КоличествоСтрокОшибка = КоличествоСтрокОшибка + 1;
		    СообщениеПользователю = Новый СообщениеПользователю();
		    СообщениеПользователю.Текст = СтрШаблон("Произошла ошибка, не удалось обновить цену номенклатуры %1",
					Выборка.Номенклатура);
		    СообщениеПользователю.Сообщить();
		КонецПопытки; 
	КонецЦикла;
	СообщениеПользователю = Новый СообщениеПользователю();
	СообщениеПользователю.Текст = СтрШаблон("Цены удачно обновлены для %1 позиций, количество ошибок %2.",
			КоличествоСтрокЗагружено,
			КоличествоСтрокОшибка);
	СообщениеПользователю.Сообщить();
Конецпроцедуры