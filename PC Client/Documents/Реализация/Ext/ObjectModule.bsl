 Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.ПредварительнаяЗапись") Тогда
		Контрагент = ДанныеЗаполнения.Клиент;
		Комментарий = СтрШаблон("Введен на основании: Предварительная запись №%1 от %2", 
					ДанныеЗаполнения.Номер,
					ДанныеЗаполнения.Дата);
		Ответственный = ДанныеЗаполнения.Ответственный;
		Сотрудник = ДанныеЗаполнения.Сотрудник;
		ДокументОснование = ДанныеЗаполнения.Ссылка;
		СуммаДокумента = ДанныеЗаполнения.СуммаДокумента;
		Для Каждого ТекСтрокаАбонементы Из ДанныеЗаполнения.Абонементы Цикл
			НоваяСтрока = Абонементы.Добавить();
			НоваяСтрока.Номенклатура = ТекСтрокаАбонементы.Абонемент;
			НоваяСтрока.КоличествоМесяцев = ТекСтрокаАбонементы.КоличествоМесяцев;
			НоваяСтрока.Стоимость = ТекСтрокаАбонементы.Стоимость;
		КонецЦикла;
		Для Каждого ТекСтрокаУслуги Из ДанныеЗаполнения.Услуги Цикл
			НоваяСтрока = Услуги.Добавить();
			НоваяСтрока.Количество = ТекСтрокаУслуги.Количество;
			НоваяСтрока.Сумма = ТекСтрокаУслуги.Сумма;
			НоваяСтрока.Услуга = ТекСтрокаУслуги.Услуга;
			НоваяСтрока.Цена = ТекСтрокаУслуги.Цена;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный; 
	ЭлементБлокировки.ИсточникДанных = Товары; 
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура"); 
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад); 
	Блокировка.Заблокировать();

	Движения.Продажи.Записывать = Истина;
	Движения.ТоварыНаСкладах.Записывать = Истина;
    Движения.УчётЗатрат.Записывать = Истина;
	Движения.ЗаказыКлиентов.Записывать = Истина;
	Движения.Хозрасчётный.Записывать = Истина;
	
	Движения.Продажи.Записать();
	Движения.ТоварыНаСкладах.Записать();
	Движения.УчётЗатрат.Записать();
	Движения.ЗаказыКлиентов.Записать();
	Движения.Хозрасчётный.Записать();
	
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Движения.Продажи.Записывать = Истина;	 
	Движения.УчётЗатрат.Записывать = Истина;
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Движения.ЗаказыКлиентов.Записывать = Истина;
	КонецЕсли;
	Движения.Хозрасчётный.Записывать = Истина;	
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Текст = "ВЫБРАТЬ
	               |	РеализацияТовары.Номенклатура КАК Номенклатура,
	               |	СУММА(РеализацияТовары.Количество) КАК Количество,
	               |	СУММА(РеализацияТовары.Сумма) КАК Сумма
	               |ПОМЕСТИТЬ ВТ_ТоварыУслугиАбонементы
	               |ИЗ
	               |	Документ.Реализация.Товары КАК РеализацияТовары
	               |ГДЕ
	               |	РеализацияТовары.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияТовары.Номенклатура
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияУслуги.Услуга,
	               |	СУММА(РеализацияУслуги.Количество),
	               |	СУММА(РеализацияУслуги.Сумма)
	               |ИЗ
	               |	Документ.Реализация.Услуги КАК РеализацияУслуги
	               |ГДЕ
	               |	РеализацияУслуги.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияУслуги.Услуга
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	РеализацияАбонементы.Номенклатура,
	               |	1,
	               |	РеализацияАбонементы.Стоимость
	               |ИЗ
	               |	Документ.Реализация.Абонементы КАК РеализацияАбонементы
	               |ГДЕ
	               |	РеализацияАбонементы.Ссылка = &Ссылка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РеализацияАбонементы.Номенклатура,
	               |	РеализацияАбонементы.Стоимость
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Номенклатура
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура КАК Номенклатура,
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.Представление КАК НоменклатураПредставление,
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	ВТ_ТоварыУслугиАбонементы.Количество КАК КоличествоВДокументе,
	               |	ВТ_ТоварыУслугиАбонементы.Сумма КАК СуммаВДокументе,
	               |	ВЫБОР
	               |		КОГДА ВТ_ТоварыУслугиАбонементы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЛОЖЬ
	               |	КОНЕЦ КАК ЭтоТовар,
	               |	ТоварыНаСкладахОстатки.СрокГодности КАК СрокГодности,
	               |	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток,
	               |	ТоварыНаСкладахОстатки.СуммаОстаток КАК СуммаОстаток,
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.СчётБухгалтерскогоУчёта КАК СчётБухгалтерскогоУчёта
	               |ИЗ
	               |	ВТ_ТоварыУслугиАбонементы КАК ВТ_ТоварыУслугиАбонементы
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
	               |				&МоментВремени,
	               |				Склад = &Склад
	               |					И Номенклатура В
	               |						(ВЫБРАТЬ
	               |							ВТ_ТоварыУслугиАбонементы.Номенклатура
	               |						ИЗ
	               |							ВТ_ТоварыУслугиАбонементы КАК ВТ_ТоварыУслугиАбонементы)) КАК ТоварыНаСкладахОстатки
	               |		ПО ВТ_ТоварыУслугиАбонементы.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	СрокГодности
	               |ИТОГИ
	               |	МАКСИМУМ(КоличествоВДокументе),
	               |	МАКСИМУМ(СуммаВДокументе),
	               |	СУММА(КоличествоОстаток)
	               |ПО
	               |	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	ВыборкаНоменклатура = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ЭтоТовар Тогда
			УчётЗатратСумма = 0;
			Превышение = ВыборкаНоменклатура.КоличествоВДокументе - ВыборкаНоменклатура.КоличествоОстаток;
			
			Если Превышение > 0 Тогда
					Отказ = Истина;
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = СтрШаблон("Проведение невозможно, на складе %1 отсутствует необходимое количество номенклатуры %2", Склад, ВыборкаНоменклатура.НоменклатураПредставление);
					Сообщение.Сообщить();
				КонецЕсли;
				
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			ОсталосьСписать = ВыборкаНоменклатура.КоличествоВДокументе;
			ВыборкаДетальная = ВыборкаНоменклатура.Выбрать();

		
			Пока ВыборкаДетальная.Следующий() Цикл
				Списываем = Мин(ВыборкаДетальная.КоличествоОстаток, ОсталосьСписать);
				
				Движение = Движения.ТоварыНаСкладах.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальная.Номенклатура;
				Движение.СрокГодности = ВыборкаДетальная.СрокГодности;
				Движение.Количество = Списываем;
				Движение.Склад = Склад;
				
				ОсталосьСписать = ОсталосьСписать - Списываем;
				Движение.Сумма = ?(ВыборкаДетальная.КоличествоВДокументе = Списываем,
				ВыборкаДетальная.СуммаВДокументе,
				Списываем / ВыборкаДетальная.КоличествоОстаток * ВыборкаДетальная.СуммаОстаток);
				УчётЗатратСумма = УчётЗатратСумма + Движение.Сумма;
				
				//Проводка по списанию товаров и материалов Дт90 Кт10/41
				Движение = Движения.Хозрасчётный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчётный.Продажи;
				Движение.СчетКт = ВыборкаНоменклатура.СчётБухгалтерскогоУчёта;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчётные.Номенклатура] = ВыборкаДетальная.Номенклатура; 
				Движение.Период = Дата;    
				Движение.Сумма = УчётЗатратСумма;
				Движение.Содержание = "Списана себестоимость товарно-материальных ценностей";
				
				Если ОсталосьСписать = 0 Тогда
					Прервать;
				КонецЕсли;
			КонецЦикла;
		Иначе
			//ЗаказыКлиентовУслуги
			Движение = Движения.ЗаказыКлиентов.ДобавитьРасход();
			Движение.Период = Дата;
			Движение.ЗаказКлиента = ДокументОснование;
			Движение.Клиент = Контрагент;
			Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе; 
		КонецЕсли;	
		//ПродажиТовары
		Движение = Движения.Продажи.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ВыборкаНоменклатура.Номенклатура;
		Движение.Контрагент = Контрагент;
		Движение.Сотрудник = Сотрудник;
		Движение.Количество = ВыборкаНоменклатура.КоличествоВДокументе;
		Движение.Сумма = ВыборкаНоменклатура.СуммаВДокументе;
	КонецЦикла;
	//Проводка по отражению выручки Дт62 Кт90
	Движение = Движения.Хозрасчётный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчётный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчётный.Продажи;
	БухгалтерскийУчёт.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, Контрагент);
	Движение.Период = Дата;
	Движение.Сумма = СуммаДокумента;
	Движение.Содержание = "Отражена выручка от реализации товаров и услуг";
   	//УчетЗатратГруппировкой
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	               |	СУММА(ВТ_ТоварыУслугиАбонементы.Сумма) КАК Сумма
	               |ИЗ
	               |	ВТ_ТоварыУслугиАбонементы КАК ВТ_ТоварыУслугиАбонементы
	               |ГДЕ
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВТ_ТоварыУслугиАбонементы.Номенклатура.СтатьяЗатрат";
	Результат = Запрос.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ВыборкаУчётЗатрат = Результат.Выбрать();
		Пока ВыборкаУчётЗатрат.Следующий() Цикл
			Движение = Движения.УчётЗатрат.Добавить();
			Движение.Период = Дата;
			Движение.СтатьяЗатрат = ВыборкаУчётЗатрат.СтатьяЗатрат;
			Движение.Сумма = ВыборкаУчётЗатрат.Сумма;	
		КонецЦикла;
    КонецЕсли; 
	 
	//Проверить корректность остатков по ЗаказыКлиентов
	Запрос = Новый Запрос;
	Движения.ЗаказыКлиентов.БлокироватьДляИзменения = Истина;
	Движения.ЗаказыКлиентов.Записать();
	Запрос.Текст = "ВЫБРАТЬ
	               |	ЗаказыКлиентовОстатки.Клиент КАК Клиент,
	               |	ЗаказыКлиентовОстатки.ЗаказКлиента КАК ЗаказКлиента,
	               |	ЗаказыКлиентовОстатки.СуммаОстаток КАК СуммаОстаток,
	               |	ЗаказыКлиентовОстатки.Клиент.Представление КАК КлиентПредставление
	               |ИЗ
	               |	РегистрНакопления.ЗаказыКлиентов.Остатки(
	               |			&МоментВремени,
	               |			Клиент = &Клиент
	               |				И ЗаказКлиента = &ЗаказКлиента
	               |				И ЗаказКлиента.ДатаЗаписи = &Дата) КАК ЗаказыКлиентовОстатки
	               |ГДЕ
	               |	ЗаказыКлиентовОстатки.СуммаОстаток < 0";
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(МоментВремени()));
	Запрос.УстановитьПараметр("Клиент", Контрагент);
	Запрос.УстановитьПараметр("ЗаказКлиента", ДокументОснование);
	Запрос.УстановитьПараметр("Дата", ДокументОснование.ДатаЗаписи); 

	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Отказ = Истина;
	    Выборка = Результат.Выбрать();
	    Пока Выборка.Следующий() Цикл
	        Сообщение = Новый СообщениеПользователю;
	        Сообщение.Текст = СтрШаблон("Услуга по записи ""%1"" для клиента ""%2""  на дату ""%3"" уже была обработана или не была найдена такая запись!", ДокументОснование, Выборка.КлиентПредставление, Формат(ДокументОснование.ДатаЗаписи, "ДФ=dd.MM.yy"));
	        Сообщение.Сообщить();
	    КонецЦикла;
	КонецЕсли;
КонецПроцедуры
