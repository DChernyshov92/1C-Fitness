&НаКлиенте
Процедура УстановитьВидимость()
	Элементы.Договор.Видимость = ПолучитьТипКонтрагента(Объект.Контрагент) = ПредопределенноеЗначение("Перечисление.ТипыКонтрагентов.Покупатель");
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТипКонтрагента(Контрагент)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Контрагенты.ТипКонтрагента КАК ТипКонтрагента
	               |ИЗ
	               |	Справочник.Контрагенты КАК Контрагенты
	               |ГДЕ
	               |	Контрагенты.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Контрагент);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ТипКонтрагента	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДлительностьАбонемента(Номенклатура)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.СрокДействияАбонемента КАК СрокДействияАбонемента
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Номенклатура);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.СрокДействияАбонемента	
КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммуДокумента()
	Объект.СуммаДокумента = Объект.Товары.Итог("Сумма") + Объект.Услуги.Итог("Сумма") + Объект.Абонементы.Итог("Стоимость");	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	УстановитьВидимость();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыНоменклатураПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуНаКонкретнуюДату(СтрокаТЧ.Номенклатура, Объект.Дата);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиУслугаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	СтрокаТЧ.Цена = РаботаСЦенами.ПолучитьЦенуНаКонкретнуюДату(СтрокаТЧ.Услуга, Объект.Дата);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура ТоварыЦенаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Товары.ТекущиеДанные;
	РаботаСТабЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиКоличествоПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура УслугиЦенаПриИзменении(Элемент)
	СтрокаТЧ = Элементы.Услуги.ТекущиеДанные;
	РаботаСТабЧастямиКлиент.ПересчитатьСуммуВСтрТЧ(СтрокаТЧ);
	ПересчитатьСуммуДокумента();
КонецПроцедуры

&НаКлиенте
Процедура АбонементыАбонементНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	СтрокаТЧ = Элементы.Абонементы.ТекущиеДанные;
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ДокументПродажи", Объект.Ссылка);
	ПараметрыФормы.Вставить("Владелец", Объект.Контрагент);
	ПараметрыФормы.Вставить("Номенклатура", СтрокаТЧ.Номенклатура);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);

	ОткрытьФорму("Справочник.Абонементы.Форма.ФормаВыбораСОтбором", ПараметрыФормы, ЭтаФорма,,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	СтрокаТЧ = Элементы.Абонементы.ТекущиеДанные;
	СтрокаТЧ.Абонемент = ВыбранноеЗначение;
	//Не понимаю, зачем это делать, если мы из данных заполнения уже всё подтянули, но надо так надо
	СтрокаТЧ.КоличествоМесяцев = ПолучитьДлительностьАбонемента(СтрокаТЧ.Номенклатура);
	СтрокаТЧ.Стоимость = РаботаСЦенами.ПолучитьЦенуНаКонкретнуюДату(СтрокаТЧ.Номенклатура, Объект.Дата);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСрокЗаморозки(НоменклатураСсылка)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	Номенклатура.ДнейЗаморозки КАК ДнейЗаморозки
	               |ИЗ
	               |	Справочник.Номенклатура КАК Номенклатура
	               |ГДЕ
	               |	Номенклатура.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", НоменклатураСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Возврат Выборка.ДнейЗаморозки;
КонецФункции

&НаСервере
Функция РассчитатьДатуОкончания(ДатаАктивации, СрокДействия)
	СекундВДне = 60 * 60 * 24;
	ДатаДляРасчетов = ДатаАктивации;
	Для сч = 1 По СрокДействия Цикл
		КоличествоДнейВМесяце = День(КонецМесяца(ДатаДляРасчетов));
		ДатаДляРасчетов = ДатаДляРасчетов + КоличествоДнейВМесяце * СекундВДне;
	КонецЦикла;
	Возврат ДатаДляРасчетов;
КонецФункции

&НаСервере
Процедура СоздатьОтсутствующиеАбонементы()      
	Для Каждого Строка Из Объект.Абонементы Цикл
		Если НЕ ЗначениеЗаполнено(Строка.Абонемент) Тогда
			Абонемент = Справочники.Абонементы.СоздатьЭлемент();
			Абонемент.Наименование = Объект.Контрагент.Наименование + " (" + Строка.Номенклатура.Наименование + ")";
			Абонемент.Владелец = Объект.Контрагент;
			Абонемент.Номенклатура = Строка.Номенклатура;
			Абонемент.Менеджер = Объект.Сотрудник;
			Абонемент.ДатаПродажи = Объект.Дата;
			Абонемент.ДокументПродажи = Объект.Ссылка;
			Если Строка.Активировать Тогда
				Абонемент.ДатаАктивации = Объект.Дата;
				Абонемент.ДатаОкончания = РассчитатьДатуОкончания(Объект.Дата, Строка.КоличествоМесяцев);
			КонецЕсли;
			Абонемент.СрокДействия = Строка.КоличествоМесяцев;
			Абонемент.ДнейЗаморозки = ПолучитьСрокЗаморозки(Строка.Номенклатура);
			Абонемент.ОстатокДнейЗаморозки = ПолучитьСрокЗаморозки(Строка.Номенклатура);
			Абонемент.Записать();
			Строка.Абонемент = Абонемент.Ссылка;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись);
	ЭтотОбъект.Записать(ПараметрыЗаписи);
КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопрос(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.Да Тогда;
		ПараметрыЗаписи = Новый Структура("РежимЗаписи", РежимЗаписиДокумента.Запись);
		ЭтаФорма.Записать(ПараметрыЗаписи);
		СоздатьОтсутствующиеАбонементы();
	Иначе
		ТекстСообщения = "Перед созданием абонементов необходимо записать документ";
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = ТекстСообщения;
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьАбонементы(Команда)
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.Да, "Записать и продолжить");
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, "Отмена");
	ТекстСообщения = СтрШаблон("Для выполнения команды ""Создать абонементы"" данные будут записаны?");
	ОбратныйВызов = Новый ОписаниеОповещения("ПослеОтветаНаВопрос", ЭтаФорма);
		
	Если Объект.Ссылка.Пустая() ИЛИ ЭтаФорма.Модифицированность Тогда
		ПоказатьВопрос(ОбратныйВызов, ТекстСообщения, СписокКнопок,,,,);
	КонецЕсли;
КонецПроцедуры

