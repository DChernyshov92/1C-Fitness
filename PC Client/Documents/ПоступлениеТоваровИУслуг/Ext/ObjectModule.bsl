 Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчётнаяПолитикаСрезПоследних.УчётнаяПолитика КАК УчётнаяПолитика
	               |ИЗ
	               |	РегистрСведений.УчётнаяПолитика.СрезПоследних(, ) КАК УчётнаяПолитикаСрезПоследних";
	//Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	ТекущаяУчётнаяПолитика = Выборка.УчётнаяПолитика;
	
	// регистр ТоварыНаСкладах Приход
	Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Склад = Склад;
		Движение.СрокГодности = ?(ТекущаяУчётнаяПолитика = Перечисления.СпособыСписанияЗапасов.FEFO,
		ТекСтрокаТовары.СрокГодности,
		"00010101");
		Движение.Количество = ТекСтрокаТовары.Количество;
		Движение.Сумма = ТекСтрокаТовары.Сумма;
	КонецЦикла;
	
	// регистр УчётЗатрат
	Движения.УчётЗатрат.Записывать = Истина;
	Движения.Хозрасчётный.Записывать = Истина;
	СчётКредит = ПланыСчетов.Хозрасчётный.РасчетыСПоставщиками;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровИУслугТовары.Сумма КАК Сумма,
	|	ПоступлениеТоваровИУслугТовары.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровИУслугТовары.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоТовар,
	|	ПоступлениеТоваровИУслугТовары.Номенклатура.СчётБухгалтерскогоУчёта КАК СчётБухгалтерскогоУчёта
	|ПОМЕСТИТЬ ВТ_ТоварыУслуги
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Товары КАК ПоступлениеТоваровИУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровИУслугТовары.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоступлениеТоваровИУслугУслуги.Услуга,
	|	ПоступлениеТоваровИУслугУслуги.Сумма,
	|	ПоступлениеТоваровИУслугУслуги.СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровИУслугУслуги.Услуга.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	ПоступлениеТоваровИУслугУслуги.Услуга.СчётБухгалтерскогоУчёта
	|ИЗ
	|	Документ.ПоступлениеТоваровИУслуг.Услуги КАК ПоступлениеТоваровИУслугУслуги
	|ГДЕ
	|	ПоступлениеТоваровИУслугУслуги.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТоварыУслуги.СтатьяЗатрат КАК СтатьяЗатрат,
	|	СУММА(ВТ_ТоварыУслуги.Сумма) КАК Сумма,
	|	ВТ_ТоварыУслуги.Номенклатура КАК Номенклатура,
	|	ВТ_ТоварыУслуги.ЭтоТовар КАК ЭтоТовар,
	|	ВТ_ТоварыУслуги.СчётБухгалтерскогоУчёта КАК СчётБухгалтерскогоУчёта
	|ИЗ
	|	ВТ_ТоварыУслуги КАК ВТ_ТоварыУслуги
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТоварыУслуги.СтатьяЗатрат,
	|	ВТ_ТоварыУслуги.Номенклатура,
	|	ВТ_ТоварыУслуги.ЭтоТовар,
	|	ВТ_ТоварыУслуги.СчётБухгалтерскогоУчёта
	|ИТОГИ
	|	СУММА(Сумма)
	|ПО
	|	СтатьяЗатрат";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	ВыборкаУчётЗатрат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаУчётЗатрат.Следующий() Цикл 
		Движение = Движения.УчётЗатрат.Добавить();
		Движение.Период = Дата;
		Движение.СтатьяЗатрат = ВыборкаУчётЗатрат.СтатьяЗатрат;
		Движение.Сумма = ВыборкаУчётЗатрат.Сумма;
		
		//регситр Хозрасчётный
		Выборка = ВыборкаУчётЗатрат.Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Выборка.ЭтоТовар Тогда
				Содержание = "Отражено поступление товарно-материальных ценностей от поставщика";
				СубконтоДТ = Выборка.Номенклатура;
			Иначе
				Содержание = "Отражено поступление услуг от поставщика";
				СубконтоДТ = Выборка.СтатьяЗатрат;
			КонецЕсли;
			Движение = Движения.Хозрасчётный.Добавить();
			Движение.СчетДт = Выборка.СчётБухгалтерскогоУчёта;
			Движение.СчетКт = СчётКредит;
			Движение.Период = Дата;
			Движение.Сумма = Выборка.Сумма;
			Движение.Содержание = Содержание;
			БухгалтерскийУчёт.ЗаполнитьСубконтоПоСчету(Движение.СчетДт, Движение.СубконтоДт, СубконтоДТ);
			БухгалтерскийУчёт.ЗаполнитьСубконтоПоСчету(Движение.СчетКт, Движение.СубконтоКт, Контрагент);
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры

